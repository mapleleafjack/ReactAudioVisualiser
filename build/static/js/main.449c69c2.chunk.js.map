{"version":3,"sources":["AudioVisualiser.js","AudioAnalyser.js","App.js","index.js"],"names":["AudioVisualiser","props","canvas","React","createRef","width","height","ref","this","audioData","current","context","getContext","x","sliceWith","length","lineWidth","strokeSTyle","clearRect","beginPath","moveTo","y","lineTo","stroke","draw","Component","AudioAnalyser","state","Uint8Array","tick","bind","audioContext","window","AudioContext","webkitAudioContext","analyser","createAnalyser","dataArray","frequencyBinCount","source","createMediaStreamSource","audio","connect","rafId","requestAnimationFrame","cancelAnimationFrame","disconnect","getByteTimeDomainData","setState","App","toggleMicrophone","a","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","stop","stopMicrophone","getMicrophone","className","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA0CeA,E,kDAvCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,OAASC,IAAMC,YAFJ,E,0CAIlB,WACE,OAAO,wBAAQC,MAAM,MAAMC,OAAO,MAAMC,IAAKC,KAAKN,W,kBAGpD,WAAO,IACGO,EAAcD,KAAKP,MAAnBQ,UACFP,EAASM,KAAKN,OAAOQ,QACtBJ,EAASJ,EAAOI,OAChBD,EAAQH,EAAOG,MACdM,EAAUT,EAAOU,WAAW,MAC9BC,EAAI,EACFC,EAAqB,EAART,EAAeI,EAAUM,OAE5CJ,EAAQK,UAAY,EACpBL,EAAQM,YAAc,UACtBN,EAAQO,UAAU,EAAE,EAAEb,EAAMC,GAE5BK,EAAQQ,YACRR,EAAQS,OAAO,EAAGd,EAAO,GAdrB,oBAgBeG,GAhBf,IAgBJ,2BAA6B,CAAC,IACtBY,EADqB,QACT,IAASf,EAC3BK,EAAQW,OAAOT,EAAEQ,GACjBR,GAAKC,GAnBH,8BAsBJH,EAAQW,OAAOT,EAAGP,EAAS,GAC3BK,EAAQY,W,gCAGV,WACEf,KAAKgB,W,GApCqBC,aCuCfC,E,kDApCb,WAAYzB,GAAO,IAAD,8BAChB,cAAMA,IACD0B,MAAQ,CAAClB,UAAW,IAAImB,WAAW,IACxC,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBAHI,E,qDAMlB,WACEtB,KAAKuB,aAAe,IAAKC,OAAOC,cAAgBD,OAAOE,oBACvD1B,KAAK2B,SAAW3B,KAAKuB,aAAaK,iBAClC5B,KAAK6B,UAAY,IAAIT,WAAWpB,KAAK2B,SAASG,mBAC9C9B,KAAK+B,OAAS/B,KAAKuB,aAAaS,wBAAwBhC,KAAKP,MAAMwC,OACnEjC,KAAK+B,OAAOG,QAAQlC,KAAK2B,UAGzB3B,KAAKmC,MAAQC,sBAAsBpC,KAAKqB,Q,kCAG1C,WACEgB,qBAAqBrC,KAAKmC,OAC1BnC,KAAK2B,SAASW,aACdtC,KAAK+B,OAAOO,e,kBAGd,WACEtC,KAAK2B,SAASY,sBAAsBvC,KAAK6B,WACzC7B,KAAKwC,SAAS,CAACvC,UAAWD,KAAK6B,YAG/B7B,KAAKmC,MAAQC,sBAAsBpC,KAAKqB,Q,oBAG1C,WACE,OAAO,cAAC,EAAD,CAAiBpB,UAAWD,KAAKmB,MAAMlB,gB,GAlCtBgB,aC+CbwB,E,kDA3Cb,WAAYhD,GAAO,IAAD,8BAChB,cAAMA,IACD0B,MAAQ,CACXc,MAAO,MAET,EAAKS,iBAAmB,EAAKA,iBAAiBpB,KAAtB,gBALR,E,wFAQlB,4BAAAqB,EAAA,sEACsBC,UAAUC,aAAaC,aAAa,CACtDb,OAAM,EACNc,OAAM,IAHV,OACQd,EADR,OAKEjC,KAAKwC,SAAS,CAACP,UALjB,gD,kFAQA,WACEjC,KAAKmB,MAAMc,MAAMe,YAAYC,SAAQ,SAAAC,GAAK,OAAIA,EAAMC,UACpDnD,KAAKwC,SAAS,CAACP,MAAM,S,8BAGvB,WACMjC,KAAKmB,MAAMc,MACbjC,KAAKoD,iBAELpD,KAAKqD,kB,oBAIT,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,wBAAQC,QAASvD,KAAK0C,iBAAtB,SACC1C,KAAKmB,MAAMc,MAAQ,kBAAoB,2BAGzCjC,KAAKmB,MAAMc,MAAQ,cAAC,EAAD,CAAeA,MAAOjC,KAAKmB,MAAMc,QAAW,U,GAvCtDhB,aCAlBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.449c69c2.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass AudioVisualiser extends Component {\n  constructor(props){\n    super(props);\n    this.canvas = React.createRef();\n  }\n  render(){\n    return <canvas width=\"300\" height=\"300\" ref={this.canvas}/>\n  }\n\n  draw(){\n    const { audioData } = this.props;\n    const canvas = this.canvas.current;\n   const height = canvas.height;\n   const width = canvas.width;\n    const context = canvas.getContext(\"2d\");\n    let x = 0;\n    const sliceWith = (width * 1.0) / audioData.length;\n\n    context.lineWidth = 2;\n    context.strokeSTyle = '#000000';\n    context.clearRect(0,0,width,height);\n\n    context.beginPath();\n    context.moveTo(0, height/2);\n\n    for (const item of audioData){\n      const y = (item / 255.0) * height;\n      context.lineTo(x,y);\n      x += sliceWith;\n    }\n\n    context.lineTo(x, height / 2);\n    context.stroke();\n  }\n\n  componentDidUpdate(){\n    this.draw();\n  }\n\n}\nexport default AudioVisualiser;\n","import React, {Component} from 'react';\nimport AudioVisualiser from \"./AudioVisualiser\";\n\nclass AudioAnalyser extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {audioData: new Uint8Array(0)};\n    this.tick = this.tick.bind(this);\n  }\n\n  componentDidMount(){\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    this.analyser = this.audioContext.createAnalyser();\n    this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n    this.source = this.audioContext.createMediaStreamSource(this.props.audio);\n    this.source.connect(this.analyser);\n\n    //start animation\n    this.rafId = requestAnimationFrame(this.tick)\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.rafId);\n    this.analyser.disconnect();\n    this.source.disconnect();\n  }\n\n  tick(){\n    this.analyser.getByteTimeDomainData(this.dataArray);\n    this.setState({audioData: this.dataArray});\n\n    //one more time!\n    this.rafId = requestAnimationFrame(this.tick);\n  }\n\n  render(){\n    return <AudioVisualiser audioData={this.state.audioData} />;\n  }\n}\n\nexport default AudioAnalyser;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport AudioAnalyser from './AudioAnalyser.js';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      audio: null\n    }\n    this.toggleMicrophone = this.toggleMicrophone.bind(this);\n  }\n\n  async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio:true,\n      video:false\n    })\n    this.setState({audio});\n  }\n\n  stopMicrophone(){\n    this.state.audio.getTracks().forEach(track => track.stop());\n    this.setState({audio:null});\n  }\n\n  toggleMicrophone(){\n    if (this.state.audio){\n      this.stopMicrophone();\n    } else {\n      this.getMicrophone();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"controls\">\n          <button onClick={this.toggleMicrophone}>\n          {this.state.audio ? \"Stop microphone\" : \"Get microphone input\"}\n          </button>\n        </div>\n        {this.state.audio ? <AudioAnalyser audio={this.state.audio}/> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}